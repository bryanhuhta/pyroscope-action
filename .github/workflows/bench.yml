name: flamegraph.com
on:
  pull_request:
  workflow_dispatch:

jobs:
  benchmark-cpu:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.x'
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y ripgrep
          go install github.com/google/pprof@latest
      - name: Benchmark CPU
        run: |
          mkdir -p artifacts
          rg -INo --color 'never' -r '$1' -e '^func (Benchmark[a-zA-Z0-9_]+)' . | xargs -I% go test -bench ^%$ -benchtime 10s -cpuprofile artifacts/%.cpu.out -o artifacts/%.cpu.exe ./...
      - name: Upload to flamegraph.com
        run: |
          find artifacts/*.cpu.exe | rg -INo --color 'never' -r '$1' -e '^artifacts/(.*)\.cpu\.exe$' | xargs -I% sh -c 'pprof -proto artifacts/%.cpu.exe artifacts/$1.cpu.out > "$1.pb.gz"' -- %
          find *.pb.gz > profiles.txt
          cat profiles.txt | xargs -I% curl -sS --data-binary @% https://flamegraph.com | jq -r .url > urls.txt
      - name: Comment profiles
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          script: |
            const fs = require('fs');

            const urls = fs.readFileSync('urls.txt', 'utf8').split('\n');
            const body = profiles.map((profile, i) => [profile, urls[i]])
              .filter(([profile, url]) => profile && url)
              .map(([profile, url]) => `- [${profile}](${url})`)
              .join('\n');

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body,
            });
